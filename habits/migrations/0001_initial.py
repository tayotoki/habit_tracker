# Generated by Django 4.2 on 2024-03-16 18:26

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Habit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "place",
                    models.CharField(max_length=64, verbose_name="Место выполнения"),
                ),
                (
                    "is_nice",
                    models.BooleanField(default=False, verbose_name="Приятная"),
                ),
                (
                    "periodicity",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "раз в день"),
                            (7, "раз в неделю"),
                            (30, "раз в месяц"),
                        ],
                        default=1,
                        verbose_name="Периодичность",
                    ),
                ),
                (
                    "reward",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="Награда"
                    ),
                ),
                (
                    "time",
                    models.DurationField(
                        default=datetime.timedelta(0),
                        verbose_name="Время на выполнение",
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(default=False, verbose_name="Публичный доступ"),
                ),
                (
                    "related_habit",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="useful_habits",
                        to="habits.habit",
                        verbose_name="Связанная приятная привычка",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="habits",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Привычка",
                "verbose_name_plural": "Привычки",
            },
        ),
        migrations.CreateModel(
            name="Action",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(verbose_name="Название действия")),
                ("description", models.TextField(verbose_name="Описание привычки")),
                (
                    "habit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="actions",
                        to="habits.habit",
                        verbose_name="Привыяка",
                    ),
                ),
            ],
            options={
                "verbose_name": "Действие для привычки",
                "verbose_name_plural": "Действия для привычек",
            },
        ),
        migrations.AddConstraint(
            model_name="habit",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("is_nice", True), ("related_habit__isnull", True)),
                    ("is_nice", False),
                    _connector="OR",
                ),
                name="habit_nice_no_related_habit",
            ),
        ),
        migrations.AddConstraint(
            model_name="habit",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("related_habit__isnull", False),
                    ("reward__isnull", False),
                    _negated=True,
                ),
                name="habit_no_related_habit_and_reward_together",
            ),
        ),
    ]
